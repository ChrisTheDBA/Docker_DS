version: "3"
services:

  client:
        container_name: website
        image: nginx
        ports:
            - 8000:80
        volumes:
            - ./website:/usr/share/nginx/html

  # jekyll:
  #   container_name: jekyll
  #   image: jekyll/jekyll:latest
  #   command: jekyll serve --watch --force_polling --verbose
  #   ports:
  #     - 4000:4000
  #   volumes:
  #     - ./jekyll:/srv/jekyll

  jupyter:
    container_name: jupyter
    build:
      context: ./jupyter
    ports:
      - "8888:8888"
    user: root
    environment:
     GRANT_SUDO: "yes"
    links:
      - postgres
    volumes:
          - "./notebooks:/home/jovyan/notebooks" 
          - "./data:/home/jovyan/notebooks/data"
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"

  postgres:
    container_name: postgresdb
    image: postgres
    shm_size: 1g
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: data
      POSTGRES_PASSWORD: data
      POSTGRES_DB: data
    #volumes:
    #  - ./postgresdbdata:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
       - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped  

  # neo4j:
  #   container_name: neo4j
  #   image: neo4j:latest
  #   restart: unless-stopped
  #   ports:
  #     - 7474:7474
  #     - 7687:7687
  #   volumes:
  #     - ./neo4j/conf:/conf
  #     - ./neo4j/data:/data
  #     - ./neo4j/import:/import
  #     - ./neo4j/logs:/logs
  #     - ./neo4j/plugins:/plugins
  #   environment: 
  #     # Raise memory limits
  #     - NEO4J_dbms_memory_pagecache_size=1G
  #     - NEO4J_dbms.memory.heap.initial_size=1G
  #     - NEO4J_dbms_memory_heap_max__size=1G

  rstudio:
     container_name: rstudio
     image: rocker/geospatial
     ports:
       - "8787:8787"
     volumes: 
       - ./rstudio:/home/rstudio
       - ./data:/home/rstudio/data 
     environment:
       - PASSWORD=P@ssw0rd
       - DISABLE_AUTH=true

  shiny:
     container_name: shiny
     image: rocker/shiny
     restart: always
     user: "root"
     ports:
       - "3838:3838"
     volumes:
       - ./shiny_logs:/var/log/shiny-server
      # Comment the line below out for initial testing. With it commented out,
      # going to localhost:80 in one's web browser will show a "Welcome to
      # Shiny Server!" diagnostics page.
      # - "./mountpoints/apps:/srv/shiny-server"

  jupyterlab:
    image: jupyterlab:3.0.0-spark-3.0.0
    container_name: jupyterlab
    ports:
      - 8887:8888
      - 4040:4040
    volumes:
      - shared-workspace:/opt/workspace
  spark-master:
    image: andreper/spark-master:3.0.0
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    volumes:
      - shared-workspace:/opt/workspace
  spark-worker-1:
    image: andreper/spark-worker:3.0.0
    container_name: spark-worker-1
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
    ports:
      - 8081:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
  spark-worker-2:
    image: andreper/spark-worker:3.0.0
    container_name: spark-worker-2
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
    ports:
      - 8082:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

volumes:
  shared-workspace:
    name: "hadoop-distributed-file-system"
    driver: local